[CONTENT]
    ✓ ボール打つランクUI表示(項目：BallSpeed、HitPower)。

    - ゲームやり方説明するための、UIチャラとテキストＢＯＸ用意。

    - COMBOカウントに関して、利点考える。

    ✓ StatusFolder UI 整理。➡ 221108

    ✓ SphereCastAllを統一する関数制作::Util.csへ
    
    - Activeスキルのホームランボーナス。
        ✓ ThunderShotのエフェクト追加。上から撃ち落とす雷。
        ✓ カラーボール：MAX 5つに制限。HOMERUNだったら、全て消す。
        ✓ アイスエイジ：ブロックを凍らせて、次のターンに下がらない。
            ✓ iceMtとpropertyDurationが過ぎたら元のMTに戻す処理適用。
            ✓ LongTypeとNormalType両方対応できるように処理分ける。
            ✓ isMySelfでは、TreasureとかHealブロックは一般ブロックにみない限定があり、IceMatがあるかで判断することで対応。
            ✓ BOSS戦には、Stageが上げなくて、この処理できないので、対応。
            ✓ RAYではなく、新しくBlockの子としてTF生成し、OverLapCheckBoxColliderで計算式実装。


    - ユニックPassiveスキル追加（ボース倒しとかガチャで出る）
        ✓ DamageTwice : ダメージ１００％アップ。➡ 221105
        ✓ GiantBall : マルチショットを一つに合わせ、下に車でスピードが下がらない。➡ 221106
        ✓ DarkOrb : ボール回るオーブ生成。(当たったら、爆発)➡ 221106
        ✓ GodBless : コンボカウントが１０番目毎に、光の爆発開始。➡ 221107
        ✓ BirdFriend : PINK鳥召喚：矢印方向に、バッティングしたとき一緒に卵を投げる。（爆発）➡ 221107

    - キャラーの足元に等級を表すアウラEF追加。    

    - ItemBlock 生成。
        a. ケノンタワ：ケノンタワ建設。
        b. mine
        c. TODO。。。

    - Passiveスキル追加
        ✓  ファイヤーボール：ドットダメージ。➡ 221104
        ✓  アイスボール：一定確率で、下にブロックが下がらない。➡ 221104
        ✓  サンターボール：一定確率で、雷EFでダブルヒット。➡ 221104

    ✓  LOADING非同期UI画面表示。

    - 能力値アップグレード商店UI追加。
        - BossDamage Up
        - Damage UP
        - Critical Damage Up
        など

    - ボース
        ✓  何種類のモデル用意。(HARD-MODEは未)
        ✓  ステージバーを体力バーとしても用意及び変換。
        ✓  障害物(STONE)が、一般のフロックと重ならないように。
        ✓  OBSTACLE_RESET_SPANとCNTを宣言し、設定した周期まで障害物を維持。
        -  スキルランダム生成シート制作。
        

[BUG]
    ✓ Ballが壁にぶつかってから、反射角が摩擦力で少しずつ減る。
    ✓ Boss登場とHOMERUN ANIMが再生する場合、画面クリックしたらカメラ転換ボタンが出るBUG。
    ✓ ICEWAVE 壁にぶつかり、反射して衝突した場合、方向が逆になるBUG。
    ✓ BALLタイプATVスキルEX）ColorBallがブロックに当たっても、生きている⇒速度を０に設定して対応。
    ✓ GodBlessとEGGPOPが最初に発動した場合、フリーズが掛けてしまいますが、原因不明 ➡ 221104
        原因-> ★★★ 全て準備したOBJECTを活性化する ⇐ こうしないと、複数のEFが活性化したら、読込が重くなり、フリーズ掛ける。
    ✓ ObjectPool getObjectで生成の時、NullになるATVスキルの種類のため、途中で処理が止まってしまう。-> if(obj != null)なら実行するようにして、対応。
    -  Block Direction Item エラー対応。